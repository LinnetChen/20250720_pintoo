// SCSS 變數定義
$colors: (
  // 深色主題
  dark: (
    bg-primary: linear-gradient(135deg, #667eea 0%, #764ba2 100%),
    bg-secondary: #2c3e50,
    container-bg: #f8f9fa,
    container-border: #dee2e6,
    menu-bg: rgba(255, 255, 255, 0.95),
    menu-border: transparent,
    menu-text: #333,
    menu-hover: rgba(0, 123, 255, 0.1),
    button-bg: rgba(255, 255, 255, 0.9),
    button-border: #333,
    button-text: #333,
    shadow: rgba(0, 0, 0, 0.3)
  ),
  // 淺色主題
  light: (
    bg-primary: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%),
    bg-secondary: #ffffff,
    container-bg: #ffffff,
    container-border: #333,
    menu-bg: rgba(255, 255, 255, 0.95),
    menu-border: #333,
    menu-text: #333,
    menu-hover: rgba(0, 123, 255, 0.1),
    button-bg: rgba(50, 50, 50, 0.9),
    button-border: #fff,
    button-text: #fff,
    shadow: rgba(0, 0, 0, 0.2)
  )
);

// 斷點定義
$breakpoints: (
  mobile: 600px,
  tablet: 900px,
  desktop: 1200px
);

// Mixin 定義
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
}

@mixin theme-colors($theme) {
  $theme-colors: map-get($colors, $theme);
  
  background: map-get($theme-colors, bg-primary);
  
  #forPuzzle {
    background: map-get($theme-colors, container-bg);
    border-color: map-get($theme-colors, container-border);
  }
  
  #menu {
    background: map-get($theme-colors, menu-bg);
    border-color: map-get($theme-colors, menu-border);
    color: map-get($theme-colors, menu-text);
    
    li {
      color: map-get($theme-colors, menu-text);
      
      &:hover:not(:first-child) {
        background: map-get($theme-colors, menu-hover);
      }
    }
  }
  
  .theme-toggle {
    background: map-get($theme-colors, button-bg);
    border-color: map-get($theme-colors, button-border);
    color: map-get($theme-colors, button-text);
    box-shadow: 0 4px 15px map-get($theme-colors, shadow);
    
    &:hover {
      box-shadow: 0 6px 20px map-get($theme-colors, shadow);
    }
  }
}

// 基礎樣式
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Microsoft JhengHei', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  min-height: 100vh;
  transition: all 0.3s ease;
  overflow-x: hidden;
  
  // 預設深色主題
  &.dark-theme {
    @include theme-colors(dark);
  }
  
  // 淺色主題
  &.light-theme {
    @include theme-colors(light);
  }
}

// 拼圖容器
#forPuzzle {
  width: 90vw;
  max-width: 800px;
  height: 67.5vw;
  max-height: 600px;
  margin: 20px auto;
  border: 2px solid;
  border-radius: 15px;
  position: relative;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  transition: all 0.3s ease;
  
  @include respond-to(tablet) {
    width: 95vw;
    height: 71.25vw;
    margin: 10px auto;
  }
  
  @include respond-to(mobile) {
    margin: 5px auto;
    border-radius: 10px;
  }
}

// 選單樣式
#menu {
  position: fixed;
  top: 20px;
  right: 20px;
  border: 2px solid;
  border-radius: 12px;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
  list-style: none;
  min-width: 200px;
  max-width: 300px;
  z-index: 1000;
  transition: all 0.3s ease;
  max-height: 90vh;
  overflow-y: auto;
  
  // 選單項目
  li {
    padding: 12px 16px;
    cursor: pointer;
    transition: all 0.3s ease;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
    font-weight: 500;
    
    &:last-child {
      border-bottom: none;
    }
    
    &:first-child {
      font-size: 18px;
      text-align: center;
      background: rgba(0, 123, 255, 0.1);
      font-weight: bold;
      border-radius: 10px 10px 0 0;
    }
    
    &:hover:not(:first-child) {
      transform: translateX(-2px);
    }
    
    &:active {
      transform: scale(0.98);
    }
  }
  
  // 響應式設計
  @include respond-to(tablet) {
    position: fixed;
    top: 10px;
    right: 10px;
    left: 10px;
    width: auto;
    max-width: none;
    min-width: auto;
    max-height: 60vh;
    
    li {
      padding: 10px 12px;
      font-size: 14px;
    }
  }
  
  @include respond-to(mobile) {
    top: 5px;
    right: 5px;
    left: 5px;
    border-radius: 8px;
    max-height: 50vh;
    
    li {
      padding: 8px 10px;
      font-size: 13px;
      
      &:first-child {
        font-size: 16px;
      }
    }
  }
  
  // 滾動條樣式
  &::-webkit-scrollbar {
    width: 6px;
  }
  
  &::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.1);
    border-radius: 3px;
  }
  
  &::-webkit-scrollbar-thumb {
    background: rgba(0, 123, 255, 0.5);
    border-radius: 3px;
    
    &:hover {
      background: rgba(0, 123, 255, 0.7);
    }
  }
}

// 選擇框樣式
#shape {
  background: white;
  border: 1px solid #ddd;
  border-radius: 5px;
  padding: 4px 8px;
  margin-left: 8px;
  font-size: 14px;
  transition: all 0.3s ease;
  
  &:focus {
    outline: none;
    border-color: #007bff;
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);
  }
  
  .light-theme & {
    border-color: #333;
  }
  
  @include respond-to(mobile) {
    font-size: 12px;
    padding: 2px 6px;
  }
}

// 主題切換按鈕
.theme-toggle {
  position: fixed;
  bottom: 30px;
  left: 30px;
  width: 60px;
  height: 60px;
  border-radius: 50%;
  border: 2px solid;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 24px;
  z-index: 1001;
  transition: all 0.3s ease;
  
  &:hover {
    transform: scale(1.1);
  }
  
  &:active {
    transform: scale(0.95);
  }
  
  .theme-icon {
    transition: transform 0.3s ease;
  }
  
  &:hover .theme-icon {
    transform: rotate(20deg);
  }
  
  // 響應式設計
  @include respond-to(tablet) {
    bottom: 20px;
    left: 20px;
    width: 50px;
    height: 50px;
    font-size: 20px;
  }
  
  @include respond-to(mobile) {
    bottom: 15px;
    left: 15px;
    width: 45px;
    height: 45px;
    font-size: 18px;
  }
}

// 拼圖片樣式
.polypiece {
  position: absolute;
  cursor: grab;
  transition: none;
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 2px;
  
  &:hover {
    filter: brightness(1.05);
    transform: scale(1.02);
  }
  
  &:active {
    cursor: grabbing;
  }
  
  &.moving {
    transition: all 1s ease-out;
    z-index: 999;
  }
}

// 載入動畫
.loading {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  font-size: 18px;
  color: #666;
  
  &::after {
    content: '';
    width: 20px;
    height: 20px;
    border: 2px solid #666;
    border-top: 2px solid transparent;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin-left: 10px;
  }
}

// 完成動畫
.puzzle-complete {
  animation: puzzleComplete 2s ease-in-out;
}

// 動畫定義
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@keyframes puzzleComplete {
  0% { transform: scale(1) rotate(0deg); }
  25% { transform: scale(1.05) rotate(2deg); }
  50% { transform: scale(1.02) rotate(-2deg); }
  75% { transform: scale(1.05) rotate(1deg); }
  100% { transform: scale(1) rotate(0deg); }
}

// 特殊效果
@media (max-height: 600px) {
  #menu {
    max-height: 40vh;
  }
  
  #forPuzzle {
    margin: 5px auto;
  }
}

// 高對比度支援
@media (prefers-contrast: high) {
  #menu {
    border-width: 3px;
  }
  
  .theme-toggle {
    border-width: 3px;
  }
}

// 減少動畫偏好支援
@media (prefers-reduced-motion: reduce) {
  * {
    transition: none !important;
    animation: none !important;
  }
}